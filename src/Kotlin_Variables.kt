/*
Variables
    var: Mutable variable; value can be reassign.
    val: Local Read-only variable; value can be assigned only once.

    Variable can be declared outside of any type of enclosing function or class; refer to 'Top-level Variable'
    Top-level variable can be worked as same as local variable.

    Value/variable types in Kotlin is NOT NULLABLE in default.
    ?: Question mark means that value/variable is nullable.
 */

val helloKotlin: String = "Hello Kotlin"
var greeting: String = "Geeting!"
var nullableEx: String? = "Example 1"

fun main() {
    // Main function can be automatically generated by typing 'main'
    val name: String = "User Name Here"
    var hello : String? = "Hello"

    println("$name $hello")
    println(greeting)

    println(nullableEx)
    nullableEx = null
    println(nullableEx)

    ifelseConditional(nullableEx)
    whenConditional(nullableEx)

    // Those two lines below do the same thing in a different way.
    val greetingToPrint1 = if(hello != null) hello else println("hello")
    val greetingToPrint2 = when (hello) {
        null -> "Hi"
        else -> hello
    }


}

//Controlling Flow
fun ifelseConditional (usrInput: String?) {
    if (usrInput != null) {
        println(usrInput)
    } else {
        println("Hello")
    }
}

fun whenConditional (usrInput: String?) {
    when (usrInput) {
        null -> println("Hello")
        else -> println(usrInput)
    }
}